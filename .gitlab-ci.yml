stages:
  - build
  - deploy
variables:
  DOCKER_REGISTRY_DEV: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO_DEV:maxx_marketing_dev_user$CI_COMMIT_SHORT_SHA
  DOCKER_TLS_CERTDIR: ''
docker:
  image: docker:stable
  stage: build
  only:
    - main
    
  services:
    - docker:dind
  before_script:
    - apk update && apk add --no-cache aws-cli

  script:
    - aws ecr get-login-password --region $AWS_REGION | docker login --username
      AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
    - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
    - if [ "$CI_COMMIT_BRANCH" == "main" ] ; then docker build -t $DOCKER_REGISTRY_DEV . ; fi
    - if [ "$CI_COMMIT_BRANCH" == "main" ] ; then docker push $DOCKER_REGISTRY_DEV ; fi
   
deploy:
  stage: deploy
  only:
    - main
   
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  artifacts:
    exclude:
      - '*'
  script:
    - export TOKEN=$(aws ecr get-login-password --region $AWS_REGION)
    - curl -LO
      https://storage.googleapis.com/kubernetes-release/release/v1.23.6/bin/linux/amd64/kubectl
    - chmod +x ./kubectl
    - mv kubectl /usr/bin/
    - kubectl version --short --client
    - aws configure set region us-east-1
    - if [ "$CI_COMMIT_BRANCH" == "main" ] ; then aws eks update-kubeconfig --region $AWS_REGION --name $K8_DEVQA_CLUSTER ; fi
   
    - if [ "$CI_COMMIT_BRANCH" == "main" ] ; then kubectl apply -f .k8s-dev/namespace.yaml ; fi
    - if [ "$CI_COMMIT_BRANCH" == "main" ] ; then kubectl apply -f .k8s-dev/service.yaml ; fi
    - if [ "$CI_COMMIT_BRANCH" == "main" ] ; then kubectl apply -f .k8s-dev/devsecret.yaml ; fi
   
    - echo $TOKEN
    - if [ "$CI_COMMIT_BRANCH" == "main" ] ; then sh .k8s-dev/deploy-dev.sh ; fi
    
